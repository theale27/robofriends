{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","components/CounterButton.js","containers/App.js","components/Header.js","actions.js","constants.js","registerServiceWorker.js","reducers.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","src","concat","alt","CardList","robots","console","log","map","user","i","components_Card","key","SearchBox","searchField","searchChange","aria-label","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","CounterButton","updateCount","count","nextProps","nextState","color","onClick","PureComponent","App","onRequestRobots","_this$props","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","components_SearchBox","components_Scroll","ErrorBoundry","components_CardList","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2df6d3d3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className=\"tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5\">\r\n      <img src={`https://robohash.org/${id}}?size=200x200`} alt=\"robots\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  console.log(\"CardList\");\r\n  return (\r\n    <div>\r\n      {robots.map((user, i) => {\r\n        return (\r\n          <Card\r\n            key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n  console.log(\"SearchBox\");\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        aria-label=\"Search Robots\"\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = props => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        border: \"1px solid black\",\r\n        height: \"800px\"\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { PureComponent } from \"react\";\r\n\r\nclass CounterButton extends PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      count: 0\r\n    };\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.state.count !== nextState.count) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  updateCount = () => {\r\n    this.setState(state => {\r\n      return { count: state.count + 1 };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"CounterButton\");\r\n    return (\r\n      <button color={this.props.color} onClick={this.updateCount}>\r\n        Count: {this.state.count}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CounterButton;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setSearchField, requestRobots } from \"../actions\";\r\n\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\nimport Header from \"../components/Header\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchField: state.searchRobots.searchField,\r\n    robots: state.requestRobots.robots,\r\n    isPending: state.requestRobots.isPending\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots())\r\n  };\r\n};\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onRequestRobots();\r\n  }\r\n\r\n  render() {\r\n    const { searchField, onSearchChange, robots, isPending } = this.props;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n    return (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">RoboFriends</h1>\r\n        <SearchBox searchChange={onSearchChange} />\r\n        <Scroll>\r\n          {isPending ? (\r\n            <h1>Loading</h1>\r\n          ) : (\r\n            <ErrorBoundry>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundry>\r\n          )}\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import React, { Component } from \"react\";\r\nimport CounterButton from \"./CounterButton\";\r\n\r\nclass Header extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return false;\r\n  }\r\n  render() {\r\n    console.log(\"Header\");\r\n    return (\r\n      <div>\r\n        <CounterButton color={\"red\"} />\r\n        <h1 className=\"f1\">RoboFriends</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED\r\n} from \"./constants.js\";\r\n\r\nexport const setSearchField = text => ({\r\n  type: CHANGE_SEARCH_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const requestRobots = () => dispatch => {\r\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response => response.json())\r\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }));\r\n};\r\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\r\n\r\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\r\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\r\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\";\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED\r\n} from \"./constants.js\";\r\n\r\nconst initialStateSearch = {\r\n  searchField: \"\"\r\n};\r\n\r\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return Object.assign({}, state, { searchField: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateRobots = {\r\n  isPending: true,\r\n  robots: []\r\n};\r\n\r\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_ROBOTS_PENDING:\r\n      return Object.assign({}, state, { isPending: true });\r\n    case REQUEST_ROBOTS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        robots: action.payload,\r\n        isPending: false\r\n      });\r\n    case REQUEST_ROBOTS_FAILED:\r\n      return Object.assign({}, state, {\r\n        error: action.payload\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { searchRobots, requestRobots } from \"./reducers\";\nimport \"tachyons\";\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}